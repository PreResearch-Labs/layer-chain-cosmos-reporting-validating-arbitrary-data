syntax = "proto3";

package layer.reporter;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "layer/reporter/params.proto";
import "layer/reporter/token_origins.proto";

option go_package = "github.com/tellor-io/layer/x/reporter/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // CreateReporter defines a (reporter) operation for creating a new reporter.
  rpc CreateReporter(MsgCreateReporter) returns (MsgCreateReporterResponse);
  // DelegateReporter defines a (reporter) operation for delegating to a reporter.
  rpc DelegateReporter(MsgDelegateReporter) returns (MsgDelegateReporterResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "layer/x/reporter/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateReporter {
  option (cosmos.msg.v1.signer) = "reporter";
  string reporter = 1;
  uint64 amount = 2;
  repeated TokenOrigins token_origins = 3;
}

message MsgCreateReporterResponse {}

message MsgDelegateReporter {
  option (cosmos.msg.v1.signer) = "delegator";
  string delegator = 1;
  string reporter = 2;
  uint64 amount = 3;
  repeated TokenOrigins token_origin = 4;
}

message MsgDelegateReporterResponse {}
