syntax = "proto3";
package layer.reporter;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/tellor-io/layer/x/reporter/types";

// TokenOrigin is a message to store the origin of a token
message TokenOrigin {
  // validator_address is the address of the validator that tokens in staking are delegated to
  string validator_address = 1;
  // amount is the amount of tokens to be delegated to a reporter from a delegation in staking
  string amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message TokenOriginInfo {
  string delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string validator_address = 2 [(cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  string amount = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// reporter's snapshot of delegators' sources pre unbonding
message DelegationsPreUpdate {
  // token_origin is the origin of the tokens that are about to be updated
  repeated TokenOriginInfo token_origins = 1;
}
