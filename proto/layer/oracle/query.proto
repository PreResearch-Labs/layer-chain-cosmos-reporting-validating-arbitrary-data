syntax = "proto3";

package layer.oracle;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "layer/oracle/params.proto";
import "layer/oracle/reports.proto";
import "layer/oracle/micro_report.proto";
option go_package = "github.com/tellor-io/layer/x/oracle/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/layer/oracle/params";
  
  }
  
  // Queries a list of GetReportsbyQid items.
  rpc GetReportsbyQid (QueryGetReportsbyQidRequest) returns (QueryGetReportsbyQidResponse) {
    option (google.api.http).get = "/layer/oracle/get_reportsby_qid/{qId}";
  
  }

  rpc GetReportsbyReporter (QueryGetReportsbyReporterRequest) returns (QueryGetReportsbyReporterResponse) {
    option (google.api.http).get = "/layer/oracle/get_reportsby_reporter/{reporter}";
  
  }

  rpc GetReportsbyReporterQid (QueryGetReportsbyReporterQidRequest) returns (QueryGetReportsbyQidResponse) {
    option (google.api.http).get = "/layer/oracle/get_reportsby_reporter_qid/{reporter}/{qid}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetReportsbyQidRequest {
  string qId = 1;
}

message QueryGetReportsbyQidResponse {
  Reports reports = 1 [(gogoproto.nullable) = false];
}

message QueryGetReportsbyReporterRequest {
  string reporter = 1;
}

message QueryGetReportsbyReporterResponse {
  repeated MicroReport microReports = 1 [(gogoproto.nullable) = false];
}

message QueryGetReportsbyReporterQidRequest {
  string reporter = 1;
  string qid = 2;
}