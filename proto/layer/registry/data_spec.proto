syntax = "proto3";
package layer.registry;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/tellor-io/layer/x/registry/types";

// ABIComponent is a specification for how to interpret abi_components
message ABIComponent {
  // name
  string name = 1;
  // type
  string type = 2;
  // consider taking this recursion out and make it once only
  repeated ABIComponent nested_component = 3;
}

// DataSpec is a specification for how to interpret and aggregate data
message DataSpec {
  // ipfs hash of the data spec
  string document_hash = 1;
  // the value's datatype for decoding the value
  string value_type = 2;
  // the abi components for decoding
  repeated ABIComponent abi_components = 3;
  // how to aggregate the data (ie. average, median, mode, etc) for aggregating reports and arriving at final value
  string aggregation_method = 4;
  // address that originally registered the data spec
  string registrar = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // report_buffer_window specifies the duration of the time window following an initial report
  // during which additional reports can be submitted. This duration acts as a buffer, allowing
  // a collection of related reports in a defined time frame. The window ensures that all
  // pertinent reports are aggregated together before arriving at a final value. This defaults
  // to 0s if not specified.
  // extensions: treat as a golang time.duration, don't allow nil values, don't omit empty values
  google.protobuf.Duration report_buffer_window = 6 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}
