syntax = "proto3";

package layer.registry;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "layer/registry/data_spec.proto";
import "layer/registry/params.proto";

option go_package = "github.com/tellor-io/layer/x/registry/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/layer/registry/params";
  }

  // Queries a list of GetDataSpec items.
  rpc GetDataSpec(QueryGetDataSpecRequest) returns (QueryGetDataSpecResponse) {
    option (google.api.http).get = "/layer/registry/get_data_spec/{query_type}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryGetDataSpecRequest is request type for the Query/GetDataSpec RPC method.
message QueryGetDataSpecRequest {
  // queryType is the key to fetch a the corresponding data spec.
  string query_type = 1;
}

// QueryGetDataSpecResponse is response type for the Query/GetDataSpec RPC method.
message QueryGetDataSpecResponse {
  // spec is the data spec corresponding to the query type.
  DataSpec spec = 1;
}
