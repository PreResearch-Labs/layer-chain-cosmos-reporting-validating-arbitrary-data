// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	types "github.com/tellor-io/layer/x/registry/types"
)

// RegistryHooks is an autogenerated mock type for the RegistryHooks type
type RegistryHooks struct {
	mock.Mock
}

// AfterDataSpecUpdated provides a mock function with given fields: ctx, querytype, dataspec
func (_m *RegistryHooks) AfterDataSpecUpdated(ctx context.Context, querytype string, dataspec types.DataSpec) error {
	ret := _m.Called(ctx, querytype, dataspec)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, types.DataSpec) error); ok {
		r0 = rf(ctx, querytype, dataspec)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRegistryHooks interface {
	mock.TestingT
	Cleanup(func())
}

// NewRegistryHooks creates a new instance of RegistryHooks. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegistryHooks(t mockConstructorTestingTNewRegistryHooks) *RegistryHooks {
	mock := &RegistryHooks{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
