// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: layer/reporter/delegation.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Delegation is a type that represents a delegator's delegation to a reporter
type Delegation struct {
	// reporter is the address of the reporter being delegated to
	Reporter []byte `protobuf:"bytes,1,opt,name=reporter,proto3" json:"reporter,omitempty"`
	// amount is the amount of tokens delegated
	Amount          cosmossdk_io_math.Int `protobuf:"bytes,2,opt,name=amount,proto3,customtype=cosmossdk.io/math.Int" json:"amount"`
	DelegationCount uint64                `protobuf:"varint,3,opt,name=delegation_count,json=delegationCount,proto3" json:"delegation_count,omitempty"`
	// locked_until_time is the time until which the tokens are locked before they
	// can be used for reporting again
	LockedUntilTime time.Time `protobuf:"bytes,4,opt,name=locked_until_time,json=lockedUntilTime,proto3,stdtime" json:"locked_until_time"`
}

func (m *Delegation) Reset()         { *m = Delegation{} }
func (m *Delegation) String() string { return proto.CompactTextString(m) }
func (*Delegation) ProtoMessage()    {}
func (*Delegation) Descriptor() ([]byte, []int) {
	return fileDescriptor_66d928de90a17af7, []int{0}
}
func (m *Delegation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Delegation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Delegation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Delegation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Delegation.Merge(m, src)
}
func (m *Delegation) XXX_Size() int {
	return m.Size()
}
func (m *Delegation) XXX_DiscardUnknown() {
	xxx_messageInfo_Delegation.DiscardUnknown(m)
}

var xxx_messageInfo_Delegation proto.InternalMessageInfo

func (m *Delegation) GetReporter() []byte {
	if m != nil {
		return m.Reporter
	}
	return nil
}

func (m *Delegation) GetDelegationCount() uint64 {
	if m != nil {
		return m.DelegationCount
	}
	return 0
}

func (m *Delegation) GetLockedUntilTime() time.Time {
	if m != nil {
		return m.LockedUntilTime
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*Delegation)(nil), "layer.reporter.Delegation")
}

func init() { proto.RegisterFile("layer/reporter/delegation.proto", fileDescriptor_66d928de90a17af7) }

var fileDescriptor_66d928de90a17af7 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x51, 0xc1, 0x4e, 0xea, 0x40,
	0x14, 0xed, 0xbc, 0x47, 0x08, 0x6f, 0x9e, 0x11, 0x69, 0x34, 0xc1, 0x2e, 0xda, 0xc6, 0x55, 0x0d,
	0x61, 0x26, 0xd1, 0x3f, 0x00, 0x5d, 0xb0, 0x33, 0x8d, 0x6e, 0xdc, 0x34, 0xa5, 0x8c, 0xa5, 0x61,
	0xa6, 0xb7, 0x69, 0xa7, 0x89, 0xfc, 0x05, 0x1f, 0xe3, 0x47, 0xb0, 0x24, 0xae, 0x8c, 0x0b, 0x34,
	0xb0, 0xf3, 0x2b, 0x4c, 0x67, 0x5a, 0xd8, 0x34, 0x3d, 0xe7, 0x9e, 0x33, 0xf7, 0x9c, 0x5c, 0xec,
	0xf0, 0x70, 0xc9, 0x72, 0x9a, 0xb3, 0x0c, 0x72, 0xc9, 0x72, 0x3a, 0x63, 0x9c, 0xc5, 0xa1, 0x4c,
	0x20, 0x25, 0x59, 0x0e, 0x12, 0xcc, 0x53, 0x25, 0x20, 0x8d, 0xc0, 0xea, 0x85, 0x22, 0x49, 0x81,
	0xaa, 0xaf, 0x96, 0x58, 0x97, 0x11, 0x14, 0x02, 0x8a, 0x40, 0x21, 0xaa, 0x41, 0x3d, 0x3a, 0x8f,
	0x21, 0x06, 0xcd, 0x57, 0x7f, 0x35, 0xeb, 0xc4, 0x00, 0x31, 0x67, 0x54, 0xa1, 0x69, 0xf9, 0x42,
	0x65, 0x22, 0x58, 0x21, 0x43, 0x91, 0x69, 0xc1, 0xd5, 0x0f, 0xc2, 0xf8, 0xee, 0x90, 0xc4, 0xb4,
	0x70, 0xa7, 0xd9, 0xdf, 0x47, 0x2e, 0xf2, 0x4e, 0xfc, 0x03, 0x36, 0xc7, 0xb8, 0x1d, 0x0a, 0x28,
	0x53, 0xd9, 0xff, 0xe3, 0x22, 0xef, 0xdf, 0x68, 0xb0, 0xde, 0x3a, 0xc6, 0xe7, 0xd6, 0xb9, 0xd0,
	0x39, 0x8a, 0xd9, 0x82, 0x24, 0x40, 0x45, 0x28, 0xe7, 0x64, 0x92, 0xca, 0xf7, 0xb7, 0x21, 0xae,
	0x03, 0x4e, 0x52, 0xe9, 0xd7, 0x56, 0xf3, 0x1a, 0x9f, 0x1d, 0x8b, 0x07, 0x91, 0x7a, 0xee, 0xaf,
	0x8b, 0xbc, 0x96, 0xdf, 0x3d, 0xf2, 0x63, 0x25, 0x7d, 0xc0, 0x3d, 0x0e, 0xd1, 0x82, 0xcd, 0x82,
	0x32, 0x95, 0x09, 0x0f, 0xaa, 0xe8, 0xfd, 0x96, 0x8b, 0xbc, 0xff, 0x37, 0x16, 0xd1, 0xbd, 0x48,
	0xd3, 0x8b, 0x3c, 0x36, 0xbd, 0x46, 0x9d, 0x2a, 0xd6, 0xea, 0xcb, 0x41, 0x7e, 0x57, 0xdb, 0x9f,
	0x2a, 0x77, 0x35, 0x1f, 0xdd, 0xaf, 0x77, 0x36, 0xda, 0xec, 0x6c, 0xf4, 0xbd, 0xb3, 0xd1, 0x6a,
	0x6f, 0x1b, 0x9b, 0xbd, 0x6d, 0x7c, 0xec, 0x6d, 0xe3, 0x79, 0x10, 0x27, 0x72, 0x5e, 0x4e, 0x49,
	0x04, 0x82, 0x4a, 0xc6, 0x39, 0xe4, 0xc3, 0x04, 0xa8, 0xbe, 0xd8, 0xeb, 0xf1, 0x66, 0x72, 0x99,
	0xb1, 0x62, 0xda, 0x56, 0x5b, 0x6f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x51, 0x98, 0xf5,
	0xd2, 0x01, 0x00, 0x00,
}

func (m *Delegation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Delegation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Delegation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.LockedUntilTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.LockedUntilTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintDelegation(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	if m.DelegationCount != 0 {
		i = encodeVarintDelegation(dAtA, i, uint64(m.DelegationCount))
		i--
		dAtA[i] = 0x18
	}
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintDelegation(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Reporter) > 0 {
		i -= len(m.Reporter)
		copy(dAtA[i:], m.Reporter)
		i = encodeVarintDelegation(dAtA, i, uint64(len(m.Reporter)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDelegation(dAtA []byte, offset int, v uint64) int {
	offset -= sovDelegation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Delegation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Reporter)
	if l > 0 {
		n += 1 + l + sovDelegation(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovDelegation(uint64(l))
	if m.DelegationCount != 0 {
		n += 1 + sovDelegation(uint64(m.DelegationCount))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.LockedUntilTime)
	n += 1 + l + sovDelegation(uint64(l))
	return n
}

func sovDelegation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDelegation(x uint64) (n int) {
	return sovDelegation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Delegation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDelegation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Delegation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Delegation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDelegation
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporter = append(m.Reporter[:0], dAtA[iNdEx:postIndex]...)
			if m.Reporter == nil {
				m.Reporter = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDelegation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationCount", wireType)
			}
			m.DelegationCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DelegationCount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockedUntilTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDelegation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDelegation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.LockedUntilTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDelegation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDelegation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDelegation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDelegation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDelegation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDelegation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDelegation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDelegation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDelegation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDelegation = fmt.Errorf("proto: unexpected end of group")
)
